# Template for RW-DDT Jupyter container
# Replace <rootdir>, <planet>, <visit>, <analyst>, <crds_dir>, <crds_target>, <crds_bind_mode>, and <crds_path>.
# Do not commit this file after filling in paths. Keep user-specific versions local.

services:
  rwddt_eureka:
    # Prefer a tagged image for reproducibility; override via IMAGE env if desired
    image: ${IMAGE:-tbell664/rwddt_eureka:latest}
    pull_policy: always

    # For local development (uncomment to build locally instead of pulling):
    # build:
    #   context: .
    #   args:
    #     NB_UID: ${UID:-1000}
    #     NB_GID: ${GID:-1000}
    #     EUREKA_REF: ${EUREKA_REF:-115ebc5}
    #     NOTEBOOKS_REPO: ${NOTEBOOKS_REPO:-https://github.com/taylorbell57/rocky-worlds-notebooks.git}
    #     NOTEBOOKS_REF: ${NOTEBOOKS_REF:-88688a2}
    #     INCLUDE_NOTEBOOKS: ${INCLUDE_NOTEBOOKS:-true}

    container_name: rwddt_<planet>_<visit>_<analyst>
    hostname: rwddt_<planet>_<visit>_<analyst>

    init: true
    stop_signal: SIGINT
    stop_grace_period: 20s

    # Run container as the specified UID and GID
    user: "<uid>:<gid>"

    ports:
      - "<hostport>:8888"

    volumes:
      # Analyst-specific folders (rw)
      - <rootdir>:/mnt/rwddt
      # CRDS mount
      #   split layout:  <crds_dir>:/grp/crds:ro
      #   single layout: <crds_dir>:/crds:rw
      - <crds_dir>:<crds_target>:<crds_bind_mode>

    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"

    environment:
      TZ: ${TZ:-UTC}
      # CRDS settings:
      #   local mode: use mounted cache (CRDS_PATH must exist)
      #   remote mode: contact CRDS server (cache optional)
      # These default to the user's shell environment if set.
      CRDS_MODE: ${CRDS_MODE:-local}
      CRDS_PATH: ${CRDS_PATH:-<crds_path>}
      CONDA_CHANGEPS1: no
      HOST_PORT: <hostport>
      PLANET: "<planet>"
      VISIT: "<visit>"
      ANALYST: "<analyst>"

    restart: unless-stopped

