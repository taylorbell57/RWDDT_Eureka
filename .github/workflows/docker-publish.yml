name: Publish Docker Image on Tag

on:
  push:
    tags:
      - "v*"

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/rwddt_eureka
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          labels: |
            org.opencontainers.image.title=rwddt_eureka
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.created=${{ github.run_started_at }}

      - name: Decide if this tag should be latest
        id: latest
        shell: bash
        run: |
          # current pushed tag name without 'refs/tags/'
          CUR="${GITHUB_REF_NAME}"
          # highest non-prerelease semver tag, sorted descending (v* only)
          HIGHEST="$(git tag -l 'v[0-9]*' --sort=-v:refname \
            | grep -Ev '[-+]' \
            | head -n1)"
          echo "current=${CUR}"
          echo "highest=${HIGHEST}"
          if [ -n "${HIGHEST}" ] && [ "${CUR}" = "${HIGHEST}" ]; then
            echo "is_latest=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_latest=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Build final tag list (append :latest if appropriate)
        id: tags
        shell: bash
        run: |
          echo "tags<<EOF" >> "$GITHUB_OUTPUT"
          # include all tags generated by docker/metadata-action
          echo "${{ steps.meta.outputs.tags }}" >> "$GITHUB_OUTPUT"
          if [ "${{ steps.latest.outputs.is_latest }}" = "true" ]; then
            echo "${{ secrets.DOCKERHUB_USERNAME }}/rwddt_eureka:latest" >> "$GITHUB_OUTPUT"
          fi
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

