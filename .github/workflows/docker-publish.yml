name: Publish Docker Image on Tag

on:
  push:
    tags:
      - 'v*'

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set metadata
        run: |
          echo "TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "REVISION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "CREATED=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push version tag (multi-arch)
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --push \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/rwddt_eureka:${TAG} \
            --label "org.opencontainers.image.version=${TAG}" \
            --label "org.opencontainers.image.created=${CREATED}" \
            --label "org.opencontainers.image.revision=${REVISION}" \
            .

      - name: Determine if this is the latest version
        run: |
          git fetch --tags
          CURRENT_TAG=${GITHUB_REF##*/}
          ALL_TAGS=$(git tag | grep -E '^v[0-9]' | sed 's/^v//' | sort -Vr)
          HIGHEST_TAG=v$(echo "$ALL_TAGS" | head -n 1)

          echo "CURRENT_TAG=$CURRENT_TAG" >> $GITHUB_ENV
          echo "HIGHEST_TAG=$HIGHEST_TAG" >> $GITHUB_ENV

      - name: Also tag as latest (if highest version)
        if: env.CURRENT_TAG == env.HIGHEST_TAG
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --push \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/rwddt_eureka:latest \
            --label "org.opencontainers.image.version=${TAG}" \
            --label "org.opencontainers.image.created=${CREATED}" \
            --label "org.opencontainers.image.revision=${REVISION}" \
            .
